<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>你也不是我的救赎</title>
  
    <link href="https://www.cai094.top/atom.xml" rel="self"/>
  
<link href="https://www.cai094.top/"/>
<updated>2025-05-25T06:08:10.000Z</updated>
<id>https://www.cai094.top/</id>
  
<author>
    <name>cai6</name>
    
</author>
  
<generator uri="https://hexo.io/">Hexo</generator>
  
<entry>
    <title>小张的像素风照片</title>
    <link href="https://www.cai094.top/2025/05/25/%E5%B0%8F%E5%BC%A0%E7%9A%84%E5%83%8F%E7%B4%A0%E9%A3%8E%E7%85%A7%E7%89%87/"/>
    <id>https://www.cai094.top/2025/05/25/%E5%B0%8F%E5%BC%A0%E7%9A%84%E5%83%8F%E7%B4%A0%E9%A3%8E%E7%85%A7%E7%89%87/</id>
    <published>2025-05-25T06:08:10.000Z</published>
    <updated>2025-05-25T06:08:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="小张的像素风照片"><a href="#小张的像素风照片" class="headerlink" title="小张的像素风照片"></a>小张的像素风照片</h1><p><img src="/2025/05/25/%E5%B0%8F%E5%BC%A0%E7%9A%84%E5%83%8F%E7%B4%A0%E9%A3%8E%E7%85%A7%E7%89%87/image1.png" alt="1"><br><img src="/2025/05/25/%E5%B0%8F%E5%BC%A0%E7%9A%84%E5%83%8F%E7%B4%A0%E9%A3%8E%E7%85%A7%E7%89%87/image2.jpg" alt="2"><br><img src="/2025/05/25/%E5%B0%8F%E5%BC%A0%E7%9A%84%E5%83%8F%E7%B4%A0%E9%A3%8E%E7%85%A7%E7%89%87/image3.png" alt="3"></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="小张的像素风照片"><a href="#小张的像素风照片" class="headerlink" title="小张的像素风照片"></a>小张的像素风照片</h1><p><img src="/2025/05/25/%E5%B0%8F%E5%BC%A0%E7%9A%84%E5%83%8F%E7%B4%A0%E9%A3%8E%E7%85%A7%E7%89%87/image1.png" alt="1"><br><img</summary>
    
    
    <category term="小张" scheme="https://www.cai094.top/tags/%E5%B0%8F%E5%BC%A0/"/>
    
    
</entry>
  
<entry>
    <title>2025-5-24</title>
    <link href="https://www.cai094.top/2025/05/24/2025-5-24/"/>
    <id>https://www.cai094.top/2025/05/24/2025-5-24/</id>
    <published>2025-05-24T08:54:46.000Z</published>
    <updated>2025-05-24T08:54:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="又是好吃的一天"><a href="#又是好吃的一天" class="headerlink" title="又是好吃的一天"></a>又是好吃的一天</h1><p>今天小张发给我很多好吃的，我很开心。<br>什么时候才能再次吃到小张做的美食呢？<br><strong>很好奇知了猴的味道。</strong><br><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy81YjQ2ZmEzMThhOTY2YjUxL0VjSWlwQ2R5djVwSXZia3E4QVhESGNNQkk0bUUzTmtzdjdveG90X2tIMUcwOEE_ZT0xenZZMmY.jpg" alt="包饺子"><br><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy81YjQ2ZmEzMThhOTY2YjUxL0Vkazhrc1Q5WktSQ2czUkdVQzBya0hFQkd5WG5fUzJHRFB4TXdqUXI5bTFsdVE_ZT15T2xxN1Q.jpg" alt="知了猴"><br><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy81YjQ2ZmEzMThhOTY2YjUxL0VaS09wVUROcnZ0QXRac3J6UmM1SHV3QklTUEhzTkZQd1ZJRFhGcVBvaDA5UkE_ZT1UbFI1TkM.jpg" alt="馒头蛋糕"><br><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy81YjQ2ZmEzMThhOTY2YjUxL0VaZ0JKNHUwU3Z0RnFzZFhYTW53R3VZQmxiV3I1WEFWeGtxTndqR3hmS1lueEE_ZT1YRHlLM1Q.jpg" alt="馒头蛋糕"><br><img src="https://dlink.host/1drv/aHR0cHM6Ly8xZHJ2Lm1zL2kvYy81YjQ2ZmEzMThhOTY2YjUxL0VWMTdwZFpfMUdaQmwwRmRGRU5SaERFQkdPclF5MzBYY3RUOTV5eld5VkNkM2c_ZT1yemg1Zlc.jpg" alt="想尝尝是什么味道"></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="又是好吃的一天"><a href="#又是好吃的一天" class="headerlink" title="又是好吃的一天"></a>又是好吃的一天</h1><p>今天小张发给我很多好吃的，我很开心。<br>什么时候才能再次吃到小张做的美食呢？<br><strong>很好奇知了猴的味道。</strong><br><img</summary>
    
    
    
</entry>
  
<entry>
    <title>test</title>
    <link href="https://www.cai094.top/2025/05/23/test/"/>
    <id>https://www.cai094.top/2025/05/23/test/</id>
    <published>2025-05-23T12:04:48.531Z</published>
    <updated>2025-03-16T11:48:06.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="test"><a href="#test" class="headerlink"</summary>
    
    
    
</entry>
  
<entry>
    <title>测试</title>
    <link href="https://www.cai094.top/2025/05/23/%E6%B5%8B%E8%AF%955-23/"/>
    <id>https://www.cai094.top/2025/05/23/%E6%B5%8B%E8%AF%955-23/</id>
    <published>2025-05-23T12:04:45.414Z</published>
    <updated>2025-05-23T11:10:31.594Z</updated>
    
    <content type="html"><![CDATA[<p>测试5-23</p><p><img src="https://s2.loli.net/2025/05/23/8NSMQq2u9b1LGIB.jpg">😍 </p><table><thead><tr><th>col1</th><th>col2</th><th>col3</th></tr></thead><tbody><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><p>测试5-23</p><p><img src="https://s2.loli.net/2025/05/23/8NSMQq2u9b1LGIB.jpg">😍</summary>
    
    
    
</entry>
  
<entry>
    <title>测试使用qexo进行发布</title>
    <link href="https://www.cai094.top/2025/03/16/%E6%B5%8B%E8%AF%95/"/>
    <id>https://www.cai094.top/2025/03/16/%E6%B5%8B%E8%AF%95/</id>
    <published>2025-03-16T11:33:54.372Z</published>
    <updated>2025-03-16T11:20:27.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="测试是否发布成功"><a href="#测试是否发布成功" class="headerlink" title="测试是否发布成功"></a>测试是否发布成功</h1><p>111222333</p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="测试是否发布成功"><a href="#测试是否发布成功" class="headerlink"</summary>
    
    
    <category term="测试" scheme="https://www.cai094.top/tags/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试" scheme="https://www.cai094.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
</entry>
  
<entry>
    <title>33. 搜索旋转排序数组</title>
    <link href="https://www.cai094.top/2025/01/21/33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    <id>https://www.cai094.top/2025/01/21/33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/</id>
    <published>2025-01-21T05:03:01.000Z</published>
    <updated>2025-01-21T05:03:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="33-搜索旋转排序数组"><a href="#33-搜索旋转排序数组" class="headerlink" title="33. 搜索旋转排序数组"></a>33. 搜索旋转排序数组</h1><p>[4,5,6,&#x37;<em>,&#x20;</em>&#x20;    0,1,2]</p><p>将数组一分为二，其中一定有一个是有序的，另一个可能是有序，也能是部分有序。 此时有序部分用二分法查找。无序部分再一分为二，其中一个一定有序，另一个可能有序，可能无序。就这样循环.</p><p><img src="/2025/01/21/33-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84/image1.png"></p><h2 id="判断条件可以由该图得出"><a href="#判断条件可以由该图得出" class="headerlink" title="判断条件可以由该图得出"></a>判断条件可以由该图得出</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> leetcode.editor.cn.mycode.ID33;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class 搜索旋转排序数组 &#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">search</span><span class="params">(<span class="type">int</span>[] nums, <span class="type">int</span> target)</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> nums.length;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=n-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;=r)</span><br><span class="line">            &#123;     </span><br><span class="line">                <span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(nums[mid]==target)&#123;</span><br><span class="line">                    <span class="keyword">return</span> mid;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//如果左边为有序</span></span><br><span class="line">                <span class="keyword">if</span>(nums[l]&lt;=nums[mid])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//利用左边有序判断是否在左边</span></span><br><span class="line">                    <span class="keyword">if</span>(nums[l]&lt;=target&amp;&amp;nums[mid]&gt;target)</span><br><span class="line">                    &#123;</span><br><span class="line">                       r=mid-<span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>  l=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="comment">//右边有序</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//利用左边有序判断是否在左边</span></span><br><span class="line">                    <span class="keyword">if</span> (nums[mid] &lt; target &amp;&amp; nums[r] &gt;= target) &#123;</span><br><span class="line">                        l = mid + <span class="number">1</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="33-搜索旋转排序数组"><a href="#33-搜索旋转排序数组" class="headerlink" title="33. 搜索旋转排序数组"></a>33. 搜索旋转排序数组</h1><p>[4,5,6,&#x37;<em>,&#x20;</em>&#x20;    0,1,2]</p><p>将数组一分为二，其中一定有一个是有序的，另一个可能是有序，也能是部分有序。 此时有序部分用二分法查找。无序部分再一分为二，其中一个一定有序，另一个可能有序，可能无序。就这样循环.</p><p><img</summary>
    
    
    
</entry>
  
<entry>
    <title>java动态代理的学习</title>
    <link href="https://www.cai094.top/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>https://www.cai094.top/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2025-01-19T10:59:47.000Z</published>
    <updated>2025-01-19T10:59:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java动态代理的学习"><a href="#java动态代理的学习" class="headerlink" title="java动态代理的学习"></a>java动态代理的学习</h1><p><img src="/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/1.svg" alt="代理的自我认识"></p><p><img src="/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/image1.png" alt="接口与实现的关系"></p><p><strong>代理想知道原来的对象可以实现什么功能，可以通过接口。原来的对象提供出自己的接口就可以了。</strong></p><p><img src="/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/image2.png" alt="代码执行流程"></p><p>动态代理可以将与业务无关的内容统一交给代理去实现</p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="java动态代理的学习"><a href="#java动态代理的学习" class="headerlink" title="java动态代理的学习"></a>java动态代理的学习</h1><p><img src="/2025/01/19/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9A%84%E5%AD%A6%E4%B9%A0/1.svg" alt="代理的自我认识"></p><p><img</summary>
    
    
    <category term="java" scheme="https://www.cai094.top/tags/java/"/>
    
    
    <category term="java基础" scheme="https://www.cai094.top/categories/java%E5%9F%BA%E7%A1%80/"/>
    
</entry>
  
<entry>
    <title>友链新增</title>
    <link href="https://www.cai094.top/2025/01/19/%E5%8F%8B%E9%93%BE%E6%96%B0%E5%A2%9E/"/>
    <id>https://www.cai094.top/2025/01/19/%E5%8F%8B%E9%93%BE%E6%96%B0%E5%A2%9E/</id>
    <published>2025-01-19T05:52:44.000Z</published>
    <updated>2025-01-19T05:52:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="完善友链"><a href="#完善友链" class="headerlink" title="完善友链"></a>完善友链</h1><p>使用<a href="https://sm.ms/" rel="external nofollow noreferrer">图床</a>上传好友的logo 并且配置</p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="完善友链"><a href="#完善友链" class="headerlink" title="完善友链"></a>完善友链</h1><p>使用<a href="https://sm.ms/" rel="external nofollow noreferrer">图床</a>上传好友的logo</summary>
    
    
    <category term="友链" scheme="https://www.cai094.top/tags/%E5%8F%8B%E9%93%BE/"/>
    
    
    <category term="备用" scheme="https://www.cai094.top/categories/%E5%A4%87%E7%94%A8/"/>
    
</entry>
  
<entry>
    <title>完成-Hexo-Butterfly主题在主页添加GitHub贡献日历</title>
    <link href="https://www.cai094.top/2025/01/19/%E5%AE%8C%E6%88%90-Hexo-Butterfly%E4%B8%BB%E9%A2%98%E5%9C%A8%E4%B8%BB%E9%A1%B5%E6%B7%BB%E5%8A%A0GitHub%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86/"/>
    <id>https://www.cai094.top/2025/01/19/%E5%AE%8C%E6%88%90-Hexo-Butterfly%E4%B8%BB%E9%A2%98%E5%9C%A8%E4%B8%BB%E9%A1%B5%E6%B7%BB%E5%8A%A0GitHub%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86/</id>
    <published>2025-01-18T17:23:00.000Z</published>
    <updated>2025-05-24T08:45:04.535Z</updated>
    
    <content type="html"><![CDATA[<p>重要配置<br> user: pengcai6 #git用户名<br>  apiurl: ‘<a href="https://github-contribute-plum.vercel.app/" rel="external nofollow noreferrer">https://github-contribute-plum.vercel.app</a>‘   #该网站使用vercel搭建<br>  minheight:  </p><h2 id="目前只在我的关于中展示"><a href="#目前只在我的关于中展示" class="headerlink" title="目前只在我的关于中展示"></a>目前只在我的关于中展示</h2><p><img src="/2025/01/19/%E5%AE%8C%E6%88%90-Hexo-Butterfly%E4%B8%BB%E9%A2%98%E5%9C%A8%E4%B8%BB%E9%A1%B5%E6%B7%BB%E5%8A%A0GitHub%E8%B4%A1%E7%8C%AE%E6%97%A5%E5%8E%86/image1.png" alt="具体可以前往关于观看"></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><p>重要配置<br> user: pengcai6 #git用户名<br>  apiurl: ‘<a href="https://github-contribute-plum.vercel.app/" rel="external nofollow noreferrer">https://github-contribute-plum.vercel.app</a>‘   #该网站使用vercel搭建<br>  minheight:  </p><h2 id="目前只在我的关于中展示"><a href="#目前只在我的关于中展示" class="headerlink"</summary>
    
    
    
</entry>
  
<entry>
    <title>146. LRU 缓存</title>
    <link href="https://www.cai094.top/2025/01/18/146-LRU-%E7%BC%93%E5%AD%98/"/>
    <id>https://www.cai094.top/2025/01/18/146-LRU-%E7%BC%93%E5%AD%98/</id>
    <published>2025-01-18T13:54:26.000Z</published>
    <updated>2025-01-18T13:54:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="146-LRU-缓存"><a href="#146-LRU-缓存" class="headerlink" title="146. LRU 缓存"></a>146. LRU 缓存</h1><p><a href="https://leetcode.cn/problems/lru-cache/" rel="external nofollow noreferrer">146. LRU 缓存</a></p><h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> leetcode.editor.cn.mycode.ID146;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 手写双向链表加哈希表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LRUCache1</span> &#123;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">node</span>&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> val,key;</span><br><span class="line">            <span class="keyword">public</span> node prev,next;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">node</span><span class="params">(<span class="type">int</span> key, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.key = key;</span><br><span class="line">                <span class="built_in">this</span>.val = val;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">doubleList</span>&#123;</span><br><span class="line">            <span class="keyword">public</span> node tail;</span><br><span class="line">            <span class="keyword">public</span> node head;</span><br><span class="line">            <span class="keyword">private</span> <span class="type">int</span> size;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="title function_">doubleList</span><span class="params">()</span> &#123;</span><br><span class="line">                <span class="built_in">this</span>.size=<span class="number">0</span>;</span><br><span class="line">                head=<span class="keyword">new</span> <span class="title class_">node</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                tail=<span class="keyword">new</span> <span class="title class_">node</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">                head.next=tail;</span><br><span class="line">                tail.prev=head;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 在尾部插入</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addList</span><span class="params">(node x)</span></span><br><span class="line">            &#123;</span><br><span class="line">                x.prev=tail.prev;</span><br><span class="line">                x.next=tail;</span><br><span class="line">                tail.prev.next=x;</span><br><span class="line">                tail.prev=x;</span><br><span class="line">                size++;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 一定存在</span></span><br><span class="line"><span class="comment">             *</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> x</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">remove</span><span class="params">(node x)</span>&#123;</span><br><span class="line">            x.prev.next=x.next;</span><br><span class="line">            x.next.prev=x.prev;</span><br><span class="line">            size--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> node <span class="title function_">removeFirst</span><span class="params">()</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(head.next==tail)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">node</span> <span class="variable">first</span> <span class="operator">=</span> head.next;</span><br><span class="line">                remove(first);</span><br><span class="line">                <span class="keyword">return</span> first;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">size</span><span class="params">()</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> size;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    HashMap&lt;Integer,node&gt; map;</span><br><span class="line">    doubleList cache;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cap;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LRUCache1</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.cap=capacity;</span><br><span class="line">        <span class="built_in">this</span>.map =<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="built_in">this</span>.cache=<span class="keyword">new</span> <span class="title class_">doubleList</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">makeRecently</span><span class="params">(<span class="type">int</span> key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> map.get(key);</span><br><span class="line">        cache.remove(node);</span><br><span class="line">        cache.addList(node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">addRecently</span><span class="params">(<span class="type">int</span> key ,<span class="type">int</span> value)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">node</span>(key, value);</span><br><span class="line">        cache.addList(node);</span><br><span class="line">        map.put(key,node);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">deleteKey</span><span class="params">(<span class="type">int</span> key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> map.get(key);</span><br><span class="line">        cache.remove(node);</span><br><span class="line">        map.remove(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">removeLeastRecently</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">node</span> <span class="variable">node</span> <span class="operator">=</span> cache.removeFirst();</span><br><span class="line">        map.remove(node.key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!map.containsKey(key))</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        makeRecently(key);</span><br><span class="line">        <span class="keyword">return</span> map.get(key).val;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(<span class="type">int</span> key, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(key))</span><br><span class="line">        &#123;</span><br><span class="line">            deleteKey(key);</span><br><span class="line">            addRecently(key,value);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cap==cache.size)&#123;</span><br><span class="line">            removeLeastRecently();</span><br><span class="line">        &#125;</span><br><span class="line">        addRecently(key,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> leetcode.editor.cn.mycode.ID146;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用java中自带的linkedHashMap</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LRUCache2</span> &#123;</span><br><span class="line">        <span class="type">int</span> cap;</span><br><span class="line">        LinkedHashMap&lt;Integer,Integer&gt; cache=<span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">LRUCache2</span><span class="params">(<span class="type">int</span> capacity)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.cap=capacity;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">makeRecently</span><span class="params">(<span class="type">int</span> key)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> cache.get(key);</span><br><span class="line">        <span class="comment">//删除重新插入到队尾</span></span><br><span class="line">        cache.remove(key);</span><br><span class="line">        cache.put(key,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(<span class="type">int</span> key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cache.containsKey(key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">value</span> <span class="operator">=</span> cache.get(key);</span><br><span class="line">        makeRecently(key);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">put</span><span class="params">(<span class="type">int</span> key, <span class="type">int</span> value)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(cache.containsKey(key))</span><br><span class="line">        &#123;</span><br><span class="line">            cache.put(key,value);</span><br><span class="line">            makeRecently(key);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cache.size()&gt;=cap)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//链表头部就是最久未使用的key</span></span><br><span class="line">            <span class="type">Integer</span> <span class="variable">oldKey</span> <span class="operator">=</span> cache.keySet().iterator().next();</span><br><span class="line">            cache.remove(oldKey);</span><br><span class="line">        &#125;</span><br><span class="line">        cache.put(key, value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="146-LRU-缓存"><a href="#146-LRU-缓存" class="headerlink" title="146. LRU 缓存"></a>146. LRU 缓存</h1><p><a href="https://leetcode.cn/problems/lru-cache/" rel="external nofollow noreferrer">146. LRU 缓存</a></p><h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><figure</summary>
    
    
    <category term="算法" scheme="https://www.cai094.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="LRU" scheme="https://www.cai094.top/tags/LRU/"/>
    
    
    <category term="java" scheme="https://www.cai094.top/categories/java/"/>
    
    <category term="算法" scheme="https://www.cai094.top/categories/java/%E7%AE%97%E6%B3%95/"/>
    
</entry>
  
<entry>
    <title>11盛最多水的容器</title>
    <link href="https://www.cai094.top/2025/01/16/11%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/"/>
    <id>https://www.cai094.top/2025/01/16/11%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</id>
    <published>2025-01-16T15:06:19.000Z</published>
    <updated>2025-01-16T15:06:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="11盛最多水的容器"><a href="#11盛最多水的容器" class="headerlink" title="11盛最多水的容器"></a>11盛最多水的容器</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">maxArea</span><span class="params">(<span class="type">int</span>[] height)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>, r = height.length-<span class="number">1</span>;l&lt;r; ) &#123;</span><br><span class="line">            <span class="comment">//移动右边的面积比移动左边的面积大，那么就移动右边的否则移动左边</span></span><br><span class="line">            <span class="comment">//计算面积</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">are</span> <span class="operator">=</span> Math.min(height[l], height[r]) * (r - l);</span><br><span class="line">            res = Math.max(are, res);</span><br><span class="line">            <span class="keyword">if</span> (height[l] &lt; height[r]) &#123;</span><br><span class="line">               l++;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="11盛最多水的容器"><a href="#11盛最多水的容器" class="headerlink" title="11盛最多水的容器"></a>11盛最多水的容器</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span</summary>
    
    
    <category term="算法" scheme="https://www.cai094.top/tags/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法 双指针" scheme="https://www.cai094.top/categories/%E7%AE%97%E6%B3%95-%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
</entry>
  
<entry>
    <title>15三数之和</title>
    <link href="https://www.cai094.top/2025/01/16/15%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>https://www.cai094.top/2025/01/16/15%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2025-01-16T14:32:04.000Z</published>
    <updated>2025-01-16T14:32:32.004Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ID15</span>三数之和 &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; <span class="title function_">threeSum</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="comment">//        for (int i = 0; i &lt; nums.length; i++) &#123;</span></span><br><span class="line"><span class="comment">//            for (int j = i+1; j &lt; nums.length; j++) &#123;</span></span><br><span class="line"><span class="comment">//                for (int k = j+1; k &lt; nums.length; k++) &#123;</span></span><br><span class="line"><span class="comment">//                    if(nums[i] + nums[j] + nums[k] == 0)&#123;</span></span><br><span class="line"><span class="comment">//                        res.add(Arrays.asList(nums[i] , nums[j] , nums[k]));</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; nums.length-<span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;<span class="number">0</span>&amp;&amp;nums[i]==nums[i-<span class="number">1</span>])<span class="keyword">continue</span>;</span><br><span class="line">            <span class="type">int</span> l=i+<span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> r=nums.length-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> nums[i] + nums[l] + nums[r];</span><br><span class="line">                <span class="keyword">if</span>(sum==<span class="number">0</span>) &#123;</span><br><span class="line">                    res.add(Arrays.asList(nums[i], nums[l], nums[r]));</span><br><span class="line">                    <span class="comment">// 去重l和r</span></span><br><span class="line">                    <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[l] == nums[l + <span class="number">1</span>]) l++;</span><br><span class="line">                    <span class="keyword">while</span> (l &lt; r &amp;&amp; nums[r] == nums[r - <span class="number">1</span>]) r--;</span><br><span class="line">                    l++;</span><br><span class="line">                    r--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (sum&lt;<span class="number">0</span>) l++;</span><br><span class="line">                <span class="keyword">else</span> r--;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; lists = threeSum(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(<span class="string">&quot;lists = &quot;</span> + lists);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span</summary>
    
    
    
</entry>
  
<entry>
    <title>438找到字符串中所有字母异位词</title>
    <link href="https://www.cai094.top/2025/01/16/438/"/>
    <id>https://www.cai094.top/2025/01/16/438/</id>
    <published>2025-01-16T12:59:29.000Z</published>
    <updated>2025-01-16T13:26:49.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方法一：定长滑窗"><a href="#方法一：定长滑窗" class="headerlink" title="方法一：定长滑窗"></a>方法一：定长滑窗</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123;</span><br><span class="line">          <span class="comment">//保存答案</span></span><br><span class="line">        List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//p的异位词</span></span><br><span class="line">        <span class="comment">//给定两个字符串 s 和 p，找到 s 中所有 p 的</span></span><br><span class="line">        <span class="comment">//异位词</span></span><br><span class="line">        <span class="comment">// 的子串，返回这些子串的起始索引。不考虑答案输出的顺序。</span></span><br><span class="line">        <span class="type">int</span>[] cntS = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">30</span>];</span><br><span class="line">        <span class="type">int</span>[] cntP = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">30</span>];</span><br><span class="line">        <span class="comment">//取出子串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : p.toCharArray()) &#123;</span><br><span class="line">              cntP[c-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> r=<span class="number">0</span>;r&lt;s.length();r++)</span><br><span class="line">        &#123;</span><br><span class="line">            cntS[s.charAt(r)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> r - p.length() + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Arrays.equals(cntS,cntP))&#123;</span><br><span class="line">                res.add(l);</span><br><span class="line">            &#125;</span><br><span class="line">            cntS[s.charAt(l) - <span class="string">&#x27;a&#x27;</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="方法二：不定长滑窗"><a href="#方法二：不定长滑窗" class="headerlink" title="方法二：不定长滑窗"></a>方法二：不定长滑窗</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Integer&gt; <span class="title function_">findAnagrams</span><span class="params">(String s, String p)</span> &#123; List&lt;Integer&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span>[] cnt = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">30</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">char</span> c : p.toCharArray()) &#123;</span><br><span class="line">            cnt[c-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> r=<span class="number">0</span>;r&lt;s.length();r++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> s.charAt(r)-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            cnt[c]--;</span><br><span class="line">           <span class="keyword">while</span>(cnt[c]&lt;<span class="number">0</span>) &#123;  </span><br><span class="line">            cnt[s.charAt(l)-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">            l++;</span><br><span class="line">           &#125;</span><br><span class="line">            <span class="keyword">if</span>(r-l+<span class="number">1</span>==p.length())</span><br><span class="line">            &#123;</span><br><span class="line">                res.add(l);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="方法一：定长滑窗"><a href="#方法一：定长滑窗" class="headerlink" title="方法一：定长滑窗"></a>方法一：定长滑窗</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span</summary>
    
    
    <category term="算法,双指针" scheme="https://www.cai094.top/tags/%E7%AE%97%E6%B3%95-%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    
</entry>
  
<entry>
    <title>openGl配置</title>
    <link href="https://www.cai094.top/2024/09/23/openGl%E9%85%8D%E7%BD%AE/"/>
    <id>https://www.cai094.top/2024/09/23/openGl%E9%85%8D%E7%BD%AE/</id>
    <published>2024-09-23T13:19:10.000Z</published>
    <updated>2024-09-23T13:19:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注意配置"><a href="#注意配置" class="headerlink" title="注意配置"></a>注意配置</h1><p><img src="/2024/09/23/openGl%E9%85%8D%E7%BD%AE/image1.png" alt="OpenGL配置截图"></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="注意配置"><a href="#注意配置" class="headerlink" title="注意配置"></a>注意配置</h1><p><img src="/2024/09/23/openGl%E9%85%8D%E7%BD%AE/image1.png"</summary>
    
    
    <category term="openGl" scheme="https://www.cai094.top/tags/openGl/"/>
    
    
</entry>
  
<entry>
    <title>idea踩坑</title>
    <link href="https://www.cai094.top/2024/09/08/idea%E8%B8%A9%E5%9D%91/"/>
    <id>https://www.cai094.top/2024/09/08/idea%E8%B8%A9%E5%9D%91/</id>
    <published>2024-09-08T02:38:04.000Z</published>
    <updated>2024-09-08T02:38:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="idae踩坑"><a href="#idae踩坑" class="headerlink" title="idae踩坑"></a>idae踩坑</h1><p><img src="/2024/09/08/idea%E8%B8%A9%E5%9D%91/image1.png" alt="修改示例"><br><em><strong>需要在这里将java设置与项目相同，否则无法打包</strong></em></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="idae踩坑"><a href="#idae踩坑" class="headerlink" title="idae踩坑"></a>idae踩坑</h1><p><img src="/2024/09/08/idea%E8%B8%A9%E5%9D%91/image1.png"</summary>
    
    
    
</entry>
  
<entry>
    <title>2024-6-20随笔</title>
    <link href="https://www.cai094.top/2024/06/20/2024-6-20%E9%9A%8F%E7%AC%94/"/>
    <id>https://www.cai094.top/2024/06/20/2024-6-20%E9%9A%8F%E7%AC%94/</id>
    <published>2024-06-20T13:27:36.000Z</published>
    <updated>2024-06-20T13:27:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习有感"><a href="#学习有感" class="headerlink" title="学习有感"></a>学习有感</h2><h2 id="学习三角"><a href="#学习三角" class="headerlink" title="学习三角"></a>学习三角</h2><ul><li>学习加深方式便是练习与交流想法</li></ul><p><img src="/2024/06/20/2024-6-20%E9%9A%8F%E7%AC%94/image1.png" alt="alt text"></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h2 id="学习有感"><a href="#学习有感" class="headerlink" title="学习有感"></a>学习有感</h2><h2 id="学习三角"><a href="#学习三角" class="headerlink" title="学习三角"></a>学习三角</h2><ul><li>学习加深方式便是练习与交流想法</li></ul><p><img src="/2024/06/20/2024-6-20%E9%9A%8F%E7%AC%94/image1.png" alt="alt</summary>
    
    
    
</entry>
  
<entry>
    <title>网站新增</title>
    <link href="https://www.cai094.top/2024/05/27/%E7%BD%91%E7%AB%99%E6%96%B0%E5%A2%9E/"/>
    <id>https://www.cai094.top/2024/05/27/%E7%BD%91%E7%AB%99%E6%96%B0%E5%A2%9E/</id>
    <published>2024-05-27T12:04:43.000Z</published>
    <updated>2024-05-27T12:04:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>新建主题中的评论机制</p>]]></content>
    
    
      
      
        
        
      
    <summary type="html"><p>新建主题中的评论机制</p></summary>
    
    
    
</entry>
  
<entry>
    <title>动画版小谢</title>
    <link href="https://www.cai094.top/2024/05/25/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/"/>
    <id>https://www.cai094.top/2024/05/25/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/</id>
    <published>2024-05-25T00:53:17.000Z</published>
    <updated>2024-05-25T00:53:17.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过chatgpt-4o生成"><a href="#通过chatgpt-4o生成" class="headerlink" title="通过chatgpt-4o生成"></a>通过chatgpt-4o生成</h1><p><img src="/2024/05/25/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/image2.png" alt="也许会一直喜欢"></p><hr><p><img src="/2024/05/25/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/image1.webp" alt="也许会一直喜欢"></p>]]></content>
    
    
      
      
        
        
          
        
      
    <summary type="html"><h1 id="通过chatgpt-4o生成"><a href="#通过chatgpt-4o生成" class="headerlink" title="通过chatgpt-4o生成"></a>通过chatgpt-4o生成</h1><p><img src="/2024/05/25/%E5%8A%A8%E7%94%BB%E7%89%88%E5%B0%8F%E8%B0%A2/image2.png" alt="也许会一直喜欢"></p><hr><p><img</summary>
    
    
    
</entry>
  
<entry>
    <title>2024-5-15学习进度</title>
    <link href="https://www.cai094.top/2024/05/15/2024-5-15%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6/"/>
    <id>https://www.cai094.top/2024/05/15/2024-5-15%E5%AD%A6%E4%B9%A0%E8%BF%9B%E5%BA%A6/</id>
    <published>2024-05-15T10:08:26.000Z</published>
    <updated>2024-05-15T10:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li>已经学习至<strong>js-dom</strong></li></ul>]]></content>
    
    
      
      
        
        
      
    <summary type="html"><ul><li>已经学习至<strong>js-dom</strong></li></ul></summary>
    
    
    
</entry>
  
<entry>
    <title>2024-5-14小计</title>
    <link href="https://www.cai094.top/2024/05/14/2024-5-14%E5%B0%8F%E8%AE%A1/"/>
    <id>https://www.cai094.top/2024/05/14/2024-5-14%E5%B0%8F%E8%AE%A1/</id>
    <published>2024-05-14T12:08:40.000Z</published>
    <updated>2024-05-14T12:08:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天学习了java的reflect，可以通过forname获取对象，从而得到该类的所有信息，例如：类中的方法，属性，构造函数等。以及其对应的类型。还学写了代理，通过代理可以调用被代理对象的方法，并且可以在方法执行前后添加一些代码。分为静态与动态代理，静态代理需要提前写好代理类，而动态代理不需要提前写好代理类，但是需要提前写好接口。了解了日志和单元测试。</p>]]></content>
    
    
      
      
        
        
      
    <summary type="html"><p>今天学习了java的reflect，可以通过forname获取对象，从而得到该类的所有信息，例如：类中的方法，属性，构造函数等。以及其对应的类型。还学写了代理，通过代理可以调用被代理对象的方法，并且可以在方法执行前后添加一些代码。分为静态与动态代理，静态代理需要提前写好代理类，而动态代理不需要提前写好代理类，但是需要提前写好接口。了解了日志和单元测试。</p></summary>
    
    
    
</entry>
  
</feed>
